name: Build CI Wheels

on:
  push:
    branches:
      - main
      - stable
    tags:
      - 'yt-*'
  workflow_dispatch:

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
      # pinning OS versions to oldest versions available
      # because forward compatibility is much easier to
      # guarantee than backward compatibility
        os: [
          ubuntu-18.04,
          windows-2019,
          macos-10.15,
        ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels for CPython
        uses: pypa/cibuildwheel@v2.3.0
        with:
          output-dir: dist
        env:
          CIBW_BUILD: "cp36-* cp37-* cp38-* cp39-* cp310-*"
          CIBW_SKIP: "*-musllinux_*"  #  numpy doesn't have wheels for musllinux so we can't build some quickly and without bloating
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: "x86_64"
          CIBW_ARCHS_WINDOWS: "auto"
          CIBW_ENVIRONMENT: "LDFLAGS='-static-libstdc++'"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_BUILD: "rm -rf build/"  # working around .so files accumulation between builds leading up to bloated wheels

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v2
        with:
          name: tarball
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'yt-'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/yt-')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: tarball
          path: dist

      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
