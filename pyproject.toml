[build-system]
requires = [
  "setuptools>=61.2",
  # see https://github.com/numpy/numpy/pull/18389
  "wheel>=0.36.2",

  # Cython 3.0 is the next version after 0.29, and a major change,
  # we forbid it until we can properly test against it
  "Cython>=0.29.21,<3.0",
  "oldest-supported-numpy",
]

[project]
name = "yt"
version = "4.2.dev0"
description = "An analysis and visualization toolkit for volumetric data"
authors = [
    { name = "The yt project", email = "yt-dev@python.org" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Framework :: Matplotlib",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: AIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: C",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
]
keywords = [
    "astronomy astrophysics visualization amr adaptivemeshrefinement",
]
requires-python = ">=3.8"
dependencies = [
    "cmyt>=1.1.2",
    "ipywidgets>=8.0.0",
    "matplotlib!=3.4.2,>=3.2",
    "more-itertools>=8.4",
    "numpy>=1.17.5",
    "packaging>=20.9",
    "pillow>=6.2.1",
    "pyparsing>=2.0.3",
    "tomli-w>=0.4.0",
    "tqdm>=3.4.0",
    "unyt>=2.9.2,<3.0",
    "tomli>=1.2.3;python_version < '3.11'",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
text = "BSD 3-Clause"

[project.urls]
Homepage = "https://yt-project.org/"
Documentation = "https://yt-project.org/doc/"
Source = "https://github.com/yt-project/yt/"
Tracker = "https://github.com/yt-project/yt/issues"

[project.entry-points."nose.plugins.0.10"]
answer-testing = "yt.utilities.answer_testing.framework:AnswerTesting"

[project.optional-dependencies]
doc = [
    "alabaster",
    "bottle",
    "jinja2<3.1.0",
    "jupyter-client<7.0",
    "nbconvert==5.6.1",
    "pyx>=0.15",
    "regions>=0.7",
    "runnotebook",
    "scipy<=1.7.1",
    "sphinx==3.1.2",
    "sphinx-bootstrap-theme",
    "sphinx-rtd-theme",
]
full = [
    "arm-pyart!=1.12.5,>=1.11.4",
    "astropy>=4.0.1,<6.0.0",
    "f90nml>=1.1.2",
    "firefly>=3.2.0,<4.0.0",
    "glueviz>=0.13.3",
    "h5py>=3.1.0,<4.0.0",
    "ipython>=2.0.0",
    "libconf>=1.0.1",
    "miniballcpp>=0.2.1",
    "mpi4py>=3.0.3",
    "netCDF4!=1.6.1,>=1.5.3",
    "pandas>=1.1.2",
    "pooch>=0.7.0",
    "pyaml>=17.10.0",
    "pykdtree>=1.3.1",
    "pyqt5>=5.15.2",
    "pyx>=0.15",
    "requests>=2.20.0",
    "scipy>=1.5.0",
    "xarray>=0.16.1",
    "glue-core!=1.2.4;python_version >= '3.10'",
    "ratarmount~=0.8.1;platform_system!='Windows' and platform_system!='Darwin'",
]
mapserver = [
    "bottle",
]
minimal = [
    "cmyt==1.1.2",
    "ipywidgets==8.0.0",
    "matplotlib==3.2",
    "more-itertools==8.4",
    "numpy==1.17.5",
    "packaging==20.9",
    "pillow==6.2.1",
    "pyparsing==2.0.3",
    "tomli-w==0.4.0",
    "tqdm==3.4.0",
    "unyt==2.9.2",
    "tomli==1.2.3;python_version < '3.11'",
]
test = [
    "nose~=1.3.7",
    "nose-exclude",
    "nose-timer~=1.0.0",
    "pyaml>=17.10.0",
    "pytest>=6.1",
    "sympy!=1.10,!=1.9",
]
typecheck = [
    "mypy==0.991",
    "types-PyYAML==6.0.12.2",
    "types-chardet==5.0.4",
    "types-requests==2.28.11.5",
    "types-setuptools==65.6.0.1",
]

[project.scripts]
yt = "yt.utilities.command_line:run_main"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
namespaces = false


[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | yt/frontends/stream/sample_data
)/
| yt/visualization/_colormap_data.py
'''


[tool.isort]
profile = "black"
combine_as_imports = true
skip =  ["venv", "benchmarks"]
known_third_party = [
  "IPython",
  "nose",
  "numpy",
  "sympy",
  "matplotlib",
  "unyt",
  "git",
  "yaml",
  "dateutil",
  "requests",
  "coverage",
  "pytest",
  "pyx",
  "glue",
]
known_first_party = ["yt"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# The -s option prevents pytest from capturing output sent to stdout
# -v runs pytest in verbose mode
# -rsfE: The -r tells pytest to provide extra test summary info on the events
# specified by the characters following the r. s: skipped, f: failed, E: error
[tool.pytest.ini_options]
addopts = '''
    -s
    -v
    -rsfE
    --ignore-glob='*_nose.py'
    --ignore='yt/frontends/owls_subfind/tests/test_outputs.py'
    --ignore='yt/frontends/ramses/tests/test_outputs.py'
    --ignore='yt/frontends/cholla/tests/test_outputs.py'
    --ignore='yt/utilities/lib/cykdtree/tests/test_kdtree.py'
    --ignore='yt/utilities/lib/cykdtree/tests/test_utils.py'
'''


[tool.check-manifest]
# ignore generated C/C++ files, otherwise reported as "missing from VCS" (Version Control System)
# Please resist the temptation to use patterns instead of exact file names here.
ignore = [
  "yt/frontends/artio/_artio_caller.c",
  "yt/frontends/gamer/cfields.c",
  "yt/frontends/ramses/io_utils.c",
  "yt/geometry/fake_octree.c",
  "yt/geometry/grid_container.c",
  "yt/geometry/grid_visitors.c",
  "yt/geometry/oct_container.c",
  "yt/geometry/oct_visitors.c",
  "yt/geometry/particle_deposit.c",
  "yt/geometry/particle_oct_container.cpp",
  "yt/geometry/particle_smooth.c",
  "yt/geometry/selection_routines.c",
  "yt/utilities/cython_fortran_utils.c",
  "yt/utilities/lib/_octree_raytracing.cpp",
  "yt/utilities/lib/allocation_container.c",
  "yt/utilities/lib/alt_ray_tracers.c",
  "yt/utilities/lib/amr_kdtools.c",
  "yt/utilities/lib/autogenerated_element_samplers.c",
  "yt/utilities/lib/basic_octree.c",
  "yt/utilities/lib/bitarray.c",
  "yt/utilities/lib/bounded_priority_queue.c",
  "yt/utilities/lib/bounding_volume_hierarchy.cpp",
  "yt/utilities/lib/contour_finding.c",
  "yt/utilities/lib/cosmology_time.c",
  "yt/utilities/lib/cykdtree/kdtree.cpp",
  "yt/utilities/lib/cykdtree/utils.cpp",
  "yt/utilities/lib/cyoctree.c",
  "yt/utilities/lib/cyoctree.cpp",
  "yt/utilities/lib/depth_first_octree.c",
  "yt/utilities/lib/distance_queue.c",
  "yt/utilities/lib/element_mappings.c",
  "yt/utilities/lib/ewah_bool_wrap.cpp",
  "yt/utilities/lib/fnv_hash.c",
  "yt/utilities/lib/fortran_reader.c",
  "yt/utilities/lib/geometry_utils.cpp",
  "yt/utilities/lib/grid_traversal.cpp",
  "yt/utilities/lib/image_samplers.cpp",
  "yt/utilities/lib/image_utilities.c",
  "yt/utilities/lib/interpolators.c",
  "yt/utilities/lib/lenses.c",
  "yt/utilities/lib/line_integral_convolution.c",
  "yt/utilities/lib/marching_cubes.cpp",
  "yt/utilities/lib/mesh_triangulation.c",
  "yt/utilities/lib/mesh_utilities.c",
  "yt/utilities/lib/misc_utilities.cpp",
  "yt/utilities/lib/origami.c",
  "yt/utilities/lib/particle_kdtree_tools.cpp",
  "yt/utilities/lib/particle_mesh_operations.c",
  "yt/utilities/lib/partitioned_grid.cpp",
  "yt/utilities/lib/pixelization_routines.cpp",
  "yt/utilities/lib/points_in_volume.c",
  "yt/utilities/lib/primitives.c",
  "yt/utilities/lib/quad_tree.c",
  "yt/utilities/lib/ragged_arrays.c",
  "yt/utilities/lib/write_array.c",
]


[tool.mypy]
python_version = 3.8
show_error_codes = true
ignore_missing_imports = true
warn_unused_configs = true
warn_unused_ignores = true
warn_unreachable = true
show_error_context = true
exclude = "(test_*|lodgeit)"
